****    How we can map child elements directly using mapStruts ( MapStruct - Mapping Nested Bean )
        ======================================================



package sb.mapper.demo.mapper;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import sb.mapper.demo.dto.EmployeeDTO;
import sb.mapper.demo.entity.Employee;

@Mapper(componentModel = "spring")
public interface EmployeeMapper {
    @Mapping(source = "empId", target = "id")
    @Mapping(source = "empName", target = "name")
    @Mapping(source="departmentName",target="department.deptName")  // when departmentName is a direct field inside EmployeeDTO
    Employee toEntity(EmployeeDTO employeeDTO);
    
    @Mapping(source = "id", target = "empId")
    @Mapping(source = "name", target = "empName")
    @Mapping(source="department.deptName",target="departmentName")  // when departmentName is a direct field inside EmployeeDTO
    EmployeeDTO toDTO(Employee employee);

}




----------------------------------------

package sb.mapper.demo.entity;
import jakarta.persistence.*;
import lombok.Data;

@Entity
@Table(name = "employee")
@Data
public class Employee {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(name = "id")
    private Long id;

    @Column(name = "name")
    private String name;

    @Column(name = "email")
    private String email;

    @Column(name = "salary")
    private float salary;

    @ManyToOne(cascade = CascadeType.ALL)
    @JoinColumn(name ="dept_id",foreignKey = @ForeignKey(name = "emp_dept_fk"))
    private Department department;

}

---------------------------------------------

package sb.mapper.demo.entity;
import java.util.List;
import jakarta.persistence.*;
import lombok.Data;

@Entity
@Table(name = "department")
@Data
public class Department {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(name = "dept_id")
    private Long id;

    @Column(name = "deptName")
    private String deptName;

    @OneToMany(mappedBy = "department", cascade = CascadeType.ALL)
    private List<Employee> employees;
}

------------------------------------------------------

package sb.mapper.demo.dto;
import lombok.Data;

@Data
public class EmployeeDTO {

    private Long empId;
    private String empName;
    private String email;
    private float salary;
    private String departmentName;
    //private DepartmentDTO departmentDTO;

}

-------------------------------------------------------

package sb.mapper.demo.dto;
import lombok.Data;

@Data
public class DepartmentDTO {

    private Long id;
    private String deptName;
}

--------------------------------------------------------

http://localhost:8082/employee

{
   "empName": "madhu",
   "email": "madhu@gmail.com",
   "salary": 34567,
   "departmentName": "IT"
}

----------------------------------------------------------